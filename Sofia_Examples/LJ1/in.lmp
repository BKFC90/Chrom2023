# -*- lammps -*-
#
# We no turn to our first many-particle system, in this case a system
# of particles that can have liquid-gas coexistence

units           lj
atom_style      atomic

# We now choose periodic boundary conditions for an extended system

boundary	p p p

# For this system, there are some simple statements that can set up a
# system without having to specify the initial position and velocity
# of each particle, and avoid having a separate data file altogether

# First we define the simulation volume, and set up a simple cubic
# lattice 'sc' on which to put the particles initially.

# We also specify a concentration, in this case 0.3 atoms per cubic LJ unit

# So in one statement, we have

lattice         sc 0.3

# Specify a temperature as a variable that we can refer to by name

# variable T equal 0.5

# set up an interaction volume here (instead of in the init data file)

# first define a region (we can define any number of these)
region          myregion block 0 10 0 10 0 10
# now define the simulation volume to be myregion, with the number of atom types
create_box      1 myregion
# now 'create' the atoms according to the lattice in the box, in this case only 1 type
create_atoms    1 box

# LAMMPS will create a volume containing 5x5x5 = 125 atoms, in a
# volume whose dimensions are scaled such that there is a
# concentration of 0.7 per cubic LJ unit

# we can define masses here as well, one for each type
mass            1 1.0

# as an initial condition, we can give each particle (atom) a random
# initial velocity, corresonding to a temperature T (in this case
# 0.90, in LJ units), and a random number seed (87287)

# velocity        all create $T 87287

# for this example, we will truncate the LJ potential at the edge of the repulsive core, approximating a gas of hard spheres

pair_style      lj/sf 2.5 # default cutoff
pair_coeff	1 1 0.5 1.0 2.5 # the last number can override the cutoff


# These statements instruct LAMMPS about how many nearest neighbors to keep track of.

neighbor        0.3 bin
neigh_modify    every 20 delay 0 check yes


fix		F1 all nve

dump    I all image 25000 *.jpg type type size 1000 1000 view 60 120
dump_modify I backcolor white boxcolor black
dump_modify I adiam 1 0.25
dump    M all movie 500 out.mp4 type type size 1000 1000 view 60 120
dump_modify M backcolor white boxcolor black
dump_modify M adiam 1 0.25

# We can also get numerical output:

# dump [label] [particles to track] custom (customized output)
#                        [particle ID] [particle type] [x y z positions; could ask for velocities as well]

dump D1 all custom 1000 atom.dat id type x y z

# We can specify certain outputs along the way of the calculation.  These two statements request LAMMPS to print at every 1000 timesteps:

# [timestep value] [temperature] [potential energy] [kinetic energy] [total energy]

thermo		1000
thermo_style	custom step temp pe ke etotal

timestep 0.005
run		100000

# At the beginning of the calculation, the particles are at rest, and
# the total energy is the same as the potential energy, -0.45 LJ
# units.

# At the end of the calculation, the total energy is still 0=-0.447
# The kinetic energy is approximately (it varies) 0.64, and the
# temperature approximately 0.42, or roughly 2/3 the kinetic energy,
# keeping in mind that we're approximating an infinite thermal system
# with 1000 particles!
